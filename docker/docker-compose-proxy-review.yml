version: '3.7'

######################################################################################
##  The Frontline Reverse Proxy-0.0.1 April 2020                                    ##
##  REVIEW CONFIGURATION                                                            ##
##  A Can't Stop Columbus Project                                                   ##
##  Notes:                                                                          ##
##    * this file is configured on Docker in Swarm Mode                             ##
##    * Traefik is configured to use a file provider for main configurations        ##
##    * MAKE SURE YOU UPDATE THE PROXY HOST UNDER APP LABELS                        ##
##                                                                                  ## 
## For more details head to                                                         ##
## https://github.com/ademeglio/the-frontline/wiki/Mattermost-Setup-&-Configuration ##
##                                                                                  ##
## `docker stack deploy --with-registry-auth --resolve-image always --prune \       ##
##  --compose-file=docker-compose-proxy-review.yml traefik`                         ##
######################################################################################

x-default-opts:
  &default-opts
    logging:
      options:
       max-size: "1m"

services:

  # Reverse Proxy Service (Traefik 2.x)
  proxy:
    <<: *default-opts
    image: traefik:v2.2.0

    # Main configuration set by traefik.yml

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.traefik==true"
    
      restart_policy:
        condition: any
        delay: 2s
    
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.proxy.entrypoints=web-secured"
        ######################################### UPDATE HOST #################
        - "traefik.http.routers.proxy.rule=Host(`proxy.frontlineinfo.test`)" ##
        #######################################################################
        - "traefik.http.routers.proxy.service=api@internal"
        - "traefik.http.routers.proxy.tls=true"
        - "traefik.http.routers.proxy.tls.certresolver=cfg-staging-resolver"
#        - "traefik.http.routers.proxy.tls.certresolver=cfg-production-resolver"
        - "traefik.http.services.proxy.loadbalancer.server.port=8080"

        ## Authentication Configuration ##
#        - "traefik.http.routers.proxy.middlewares=authTraefik"
#        - "traefik.http.middlewares.authTraefik.basicauth.users=${PROXY_USERNAME_PASSWORD}"
    
    ports:
      - published: 80   # HTTP port to be redirected to HTTPS
        target: 80
        protocol: tcp
        mode: host
      - published: 443  # HTTPS port
        target: 443
        protocol: tcp
        mode: host
    
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - type: volume
        source: traefik-certs
        target: /certs
      - type: volume
        source: traefik-configs
        target: /etc/traefik
    
    networks:
      - traefik-public
  

######################################################################################
##  System                                                                          ##
######################################################################################

networks:
  # External public network
  traefik-public:
    external: true
    name: traefik-public

volumes: 
  traefik-certs:
    external: true
  traefik-configs:
    external: true
